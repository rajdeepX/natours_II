@import "../css/Variables.scss";
@import "../css/Mixins.scss";

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(
    to right bottom,
    $color-primary-light,
    $color-primary-dark
  );

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.book {
  background-image: linear-gradient(
      105deg,
      rgba($color-white, 0.9) 0%,
      rgba($color-white, 0.9) 50%,
      transparent 50%
    ),
    url(../../assets/img/nat-10.jpg);
  background-size: 100%;
  background-repeat: no-repeat;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba($color-black, 0.4);

  @include respond(tab-land) {
    background-image: linear-gradient(
        105deg,
        rgba($color-white, 0.9) 0%,
        rgba($color-white, 0.9) 65%,
        transparent 65%
      ),
      url(../../assets/img/nat-10.jpg);

    background-size: cover;
  }

  @include respond(tab-port) {
    background-image: linear-gradient(
        to right,
        rgba($color-white, 0.9) 0%,
        rgba($color-white, 0.9) 100%
      ),
      url(../../assets/img/nat-10.jpg);
  }

  &__form {
    width: 50%;
    padding: 6rem;

    @include respond(tab-land) {
      width: 65%;
    }
    @include respond(tab-land) {
      width: 100%;
    }
  }
}

.form {
  &__input {
    font-size: 1.5rem;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    font-family: inherit;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    color: inherit;
    transition: all 0.3s;

    @include respond(tab-port) {
      width: 100%;
    }

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
  }

  // :placeholder-shown is a special pseudo selector which helps us to modify an input element's placeholder
  // for e.g. if the placeholder is visible what do this and vice versa
  // in this we are using it with the label, when the placeholder is visible, the following css will be applied

  &__input:placeholder-shown + &__label {
    // + is adjacent sibling selector
    //  ~ is also a sibling selector called general sibling selector
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 50%;
    display: inline-block;

    @include respond(tab-port) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.5rem;

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity 0.2s;
    }
  }

  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    // :checked pseudo selector is used to manipulate our custom button here by checking if our original radio button is checked or not
    // after we get that, we now want to use it in our custom buttom
    // so since __radio-btn is not a direct child of radio-input, we first select the radio-label using the general sibling selector (works with both in this case as the label is a direct child of the radio-input container) and then we select the radio-button which is the direct child of the label
    // this is done in this way to get the checked status of the the original radio-input and use it in our custom radio-button

    // this is a trick. It can also be used for checkboxes

    opacity: 1;
  }
}
