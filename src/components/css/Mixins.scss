@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// MEDIA QUERY MANAGER

/*
Setting breakpoints

0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800px] is where our normal styles will be applied
1800px + :      Big Desktop

Now to make things easy we are going to create a mixin of our media queries so that we dont have to rewrite the breakpoints again and again.

One way to do that is to use it like this

@mixin respond-phone{
  @media (max-width: 600px) { @content }
}

The @content is where all the code goes

In this way we can call the mixin in our css file and then use it like:

@include respond-phone {
  background-color: #111;
}

// ///////

But it can even be written in a more easy way

@mixin respond($breakpoint) {
  @if ($breakpoint == phone){
    @media (max-width: 600px) { @content }
  }
  @if ($breakpoint == tab-port){
    @media (max-width: 900px) { @content }
  }
}

Here we have created an adv mixin in which it will automatically select the breakpoint according to its input
We can call this like

@include respond(phone){
  color: #111;
}


/////////

So we now give the names to the breakpoint arguments that we are going to use

$breakpoint argument choices-
- phone
- tab-port
- tab-land
- big-desktop


/////////

Now as we have changed the default font size to use them as per our convenience, we want them to work for us also in the media queries. But px will not do the trick as we knew that before
i.e. @media (max-width: 600px) will not be affected by the default font size we applied earlier, so we use relative units such as rem and em

Now: rem and em in media queries are not affected by a root font size setting
This means that 1 rem or 1em will always be equal to the font size comming from the browser by default
i.e 16px


So for the sake of avoiding conflict between static and relative sizes, instead of px we will use em
We cannot use rem because of browser compatibility (for now)
So we use em
Now as we have done it earlier that changing the font size to meet our specific rem needs will change the font size accordingly to responsiveness, but in case of media queries it does not comply

So its the default size that remain 
i.e. 1em = 16px

Now we have to set those breakpoint values according to em by dividing the screen width by 16
i.e. 600/16 = 37.5em


ORDER OF CHANGES TO THE APPLICATION DESIGN FOR RESPONSIVENESS
Base + typography > General layout (header, footer, navigation etc) + grid > page layout > components

*/

@mixin respond($breakpoint) {
  // so max-width means screen size equal to or less than the size provided
  // i.e. the max screen size upto which the code will execute
  @if $breakpoint == phone {
    @media (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port {
    @media (max-width: 56.25em) {
      @content;
    } //900px
  }

  @if $breakpoint == tab-land {
    @media (max-width: 75em) {
      @content;
    } //1200px
  }
  // this is for the screens with the minimum of 1800px width, so min-width is used
  @if $breakpoint == big-desktop {
    @media (min-width: 112.5em) {
      @content;
    } //1800px
  }
}
